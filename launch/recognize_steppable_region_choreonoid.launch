<launch>
  <arg name="MANAGER" default="color_filter_nodelet_manager" />
  <arg name="INPUT_IMAGE" default="/multisense_local/left/image_rect_color" />
  <arg name="contours_debug_view" default="true" />
  <arg name="rviz" default="true" />

  <node name="$(arg MANAGER)"
        pkg="nodelet" type="nodelet"
        args="manager" />

  <include file="$(find opencv_apps)/launch/hsv_color_filter.launch" >
    <arg name="node_name" value="brown_hsv_color_filter" />
    <arg name="image" value="$(arg INPUT_IMAGE)" />
    <arg name="h_limit_max" value="141" doc="The maximum allowed field value Hue" />
    <arg name="h_limit_min" value="0"   doc="The minimum allowed field value Hue" />
    <arg name="s_limit_max" value="183" doc="The maximum allowed field value Saturation" />
    <arg name="s_limit_min" value="135" doc="The minimum allowed field value Saturation" />
    <arg name="v_limit_max" value="98"  doc="The maximum allowed field value Value" />
    <arg name="v_limit_min" value="0"   doc="The minimum allowed field value Value" />
    <arg name="debug_view" value="false" />
  </include>

  <node name="erode_mask_image"
        pkg="nodelet" type="nodelet"
        args="load jsk_perception/ErodeMaskImage $(arg MANAGER)">
    <remap from="~input" to="brown_hsv_color_filter/image" />
    <rosparam>
      method: 0
      size: 8
    </rosparam>
  </node>

  <node name="dilate_mask_image"
        pkg="nodelet" type="nodelet"
        args="load jsk_perception/DilateMaskImage $(arg MANAGER)">
    <remap from="~input" to="erode_mask_image/output" />
    <rosparam>
      method: 0
      size: 3
    </rosparam>
  </node>

  <include file="$(find opencv_apps)/launch/convex_hull.launch">
    <arg name="node_name" value="convex_full" />
    <arg name="image"  value="/dilate_mask_image/output" />
    <arg name="debug_view"  value="$(arg contours_debug_view)" />
  </include>

  <node name="contours_converter" pkg="safe_footstep_planner" type="contours_converter" />
  <node name="fixed_steppable_polygons_publisher" pkg="safe_footstep_planner" type="fixed_steppable_polygons_publisher" output="screen"/>
  <node name="simple_polygon_to_mesh" pkg="safe_footstep_planner" type="simple-polygon-to-mesh.l" output="screen"/>
  <node name="steppable_region_publisher" pkg="safe_footstep_planner" type="steppable_region_publisher" />

  <node name="draw_meshes" pkg="safe_footstep_planner" type="draw_meshes.l" output="screen"/>

  <!-- <node type="rviz" name="rviz" pkg="rviz" args="-d $(find safe_footstep_planner)/config/contours_debug.rviz" if="$(arg rviz)"/> -->

  <!-- <node name="target_height_publisher" pkg="target_height_publisher" type="target_height_publisher" /> -->
  <node name="accumulated_heightmap_pointcloud_maprelative"
        pkg="nodelet" type="nodelet"
        args="load jsk_pcl_utils/TfTransformCloud /$(arg MANAGER)">
    <remap from="~input" to="accumulated_heightmap_pointcloud/output" />
    <rosparam>
      target_frame_id: map
    </rosparam>
  </node>

</launch>
