<launch>
  <arg name="MANAGER" default="nodelet_manager" />
  <arg name="rviz" default="true" />

  <node name="$(arg MANAGER)"
        pkg="nodelet" type="nodelet" args="manager" />

  <!-- make static virtual camera -->
  <node pkg="safe_footstep_planner" name="static_virtual_camera" type="static_virtual_camera" output="screen" />
  <!-- <node pkg="tf" type="static_transform_publisher" name="virtual_camera_broadcaster" args="1.4 0.0 0.07 -0.707107 0.707017 0.0 0.0 BODY static_virtual_camera 100" /> -->
  <!-- <node pkg="tf" type="static_transform_publisher" name="virtual_camera_broadcaster" args="1.2 0.0 0.07 -0.707107 0.707017 0.0 0.0 BODY static_virtual_camera 100" /> -->
  <node pkg="tf" type="static_transform_publisher" name="virtual_camera_broadcaster" args="1 0.0 10 -0.707107 0.707017 0.0 0.0 BODY static_virtual_camera 100" />

  <!-- get image from static virtual camera -->
  <node name="depth_image_creator"
        pkg="nodelet" type="nodelet"
        args="load jsk_pcl/DepthImageCreator /$(arg MANAGER)">
    <remap from="~input" to="/multisense_local/image_points2_color" />
    <remap from="~info" to="/static_virtual_camera/camera_info" />
    <rosparam>
      use_approximate: true
      max_queue_size: 80
    </rosparam>
  </node>

  <!-- remove noise -->
  <node name="dilate_mask_image"
        pkg="nodelet" type="nodelet"
        args="load jsk_perception/DilateMaskImage $(arg MANAGER)">
    <remap from="~input" to="/red_color_filter/image" />
    <rosparam>
      method: 0
      size: 3
    </rosparam>
  </node>

  <node name="erode_mask_image"
        pkg="nodelet" type="nodelet"
        args="load jsk_perception/ErodeMaskImage $(arg MANAGER)">
    <remap from="~input" to="/dilate_mask_image/output" />
    <rosparam>
      method: 0
      size: 3
    </rosparam>
  </node>

  <!-- multi plane recognition -->
  <include file="$(find opencv_apps)/launch/find_contours.launch">
    <!-- <arg name="image"  value="/red_color_filter/image" /> -->
    <arg name="image"  value="/erode_mask_image/output" />
    <arg name="debug_view"  value="true" />
  </include>
  <!-- <include file="$(find safe_footstep_planner)/launch/multi_plane_recognition.launch" /> -->

  <!-- plane polygon to triangle mesh -->
  <node pkg="safe_footstep_planner" type="polygon-to-mesh.l"
        name="polygon_to_mesh" output="screen" />

  <!-- change pointcloud frame id to /map -->
  <node name="tf_transform_cloud"
        pkg="nodelet" type="nodelet"
        args="load jsk_pcl_utils/TfTransformCloud /$(arg MANAGER)">
    <!-- <remap from="~input" to="/extract_indices_target_label/output" /> -->
    <remap from="~input" to="/multisense_local/image_points2_color" />
    <rosparam>
      target_frame_id: map
    </rosparam>
  </node>


  <!-- change pointcloud frame id to /map -->
  <node name="accumulated_heightmap_pointcloud_maprelative"
        pkg="nodelet" type="nodelet"
        args="load jsk_pcl_utils/TfTransformCloud /$(arg MANAGER)">
    <!-- <remap from="~input" to="/extract_indices_target_label/output" /> -->
    <remap from="~input" to="accumulated_heightmap_pointcloud/output" />
    <rosparam>
      target_frame_id: map
    </rosparam>
  </node>

  <!-- rviz -->
  <group if="$(arg rviz)">
    <node type="rviz" name="rviz" pkg="rviz" args="-d $(find safe_footstep_planner)/config/depth_image_creator.rviz"/>
  </group>

</launch>
