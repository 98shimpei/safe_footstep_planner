#!/usr/bin/env python

import rospy
from std_msgs.msg import Int32 as Int32Msg
from dynamic_reconfigure.msg import Config as ConfigMsg
from dynamic_reconfigure.msg import DoubleParameter as DoubleParameterMsg
from dynamic_reconfigure.srv import Reconfigure as ReconfigureSrv
import subprocess
import copy

def callback(msg):
    global last_update_time
    if msg.data == 1:
        cur_time = rospy.get_rostime()
        if (cur_time.secs - last_update_time.secs) < 2:
            return
        last_update_time = copy.copy(cur_time)

        rospy.loginfo("Update height threshold")
        calc_heightmap_gradient_srv = rospy.ServiceProxy("/calc_heightmap_gradient/set_parameters", ReconfigureSrv)
        try:
            cur_config = calc_heightmap_gradient_srv()
            for item in cur_config.config.doubles:
                if item.name == 'height_th':
                    current_height_th = item.value
            print(current_height_th)
            new_height_th = current_height_th - 0.01
            config = ConfigMsg(doubles = [DoubleParameterMsg("height_th", new_height_th)])
            try:
                new_config = calc_heightmap_gradient_srv(config)
            except:
                rospy.logerr("Failed to set new height threshold")

        except:
            rospy.logerr("Failed to get current config")

if __name__ == "__main__":
    rospy.init_node("height_th_updater")
    last_update_time = rospy.get_rostime()
    sub = rospy.Subscriber("/is_stuck", Int32Msg, callback, queue_size=1)
    rospy.spin()
